@page "/Add-Employee/{DepartmentId}"
@using GRpcApi
@using BlazorApp2.Service
@inject IEmpyloyeeService employeeService
@inject NavigationManager navigationManager

<EditForm Model="@Employee" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row form-group">
        <div class="col-md-2 offset-md-2">
            <label for="FirstName">FirstName</label>
        </div>
        <div class="col-md-6">
            <InputText class="form-control" id="FirstName" @bind-Value="@Employee.FristName" />
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-2 offset-md-2">
            <label for="LastName">LastName</label>
        </div>
        <div class="col-md-6">
            <InputText class="form-control" id="LastName" @bind-Value="@Employee.Name" />
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-2 offset-md-2">
            <label for="Gender">Gender</label>
        </div>
        <div class="col-md-6">
            @*<input class="form-control" asp-for="Gender" />*@
            <select id="gender" class="form-control"
                    @onchange="OnGenderSelected">
                <option selected hidden disabled> --- 请选择性别 --- </option>
                @foreach (var item in Enum.GetValues(typeof(Gender)).Cast<Gender>())
                {
                    <option value="@item">@item.ToString()</option>
                }
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2 offset-md-2">
            <button type="submit" class="btn btn-primary">提交</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string DepartmentId { get; set; }

    private GRpcApi.Employee Employee = new GRpcApi.Employee();

    private void OnGenderSelected(ChangeEventArgs e)
    {
        var gender = Enum.Parse(typeof(Gender), (string)e.Value);
        Employee.Gender = (Gender)gender;

    }
    /// <summary>
    /// 表单提交
    /// </summary>
    /// <returns></returns>
    private async Task HandleValidSubmit()
    {
        Employee.DepartmentId = int.Parse(DepartmentId);
        await employeeService.Add(Employee);
        navigationManager.NavigateTo($"/Employee/{DepartmentId}");
    }
}
