// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grpcapi.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GRpcApi {
  public static partial class Deparments
  {
    static readonly string __ServiceName = "gAPI.Deparments";

    static readonly grpc::Marshaller<global::GRpcApi.GetAllDepartmentsRequest> __Marshaller_gAPI_GetAllDepartmentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.GetAllDepartmentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.GetAllDepartmentsResponse> __Marshaller_gAPI_GetAllDepartmentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.GetAllDepartmentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.AddDepatmentRequest> __Marshaller_gAPI_AddDepatmentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.AddDepatmentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.AddDepartmentResponse> __Marshaller_gAPI_AddDepartmentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.AddDepartmentResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GRpcApi.GetAllDepartmentsRequest, global::GRpcApi.GetAllDepartmentsResponse> __Method_GetAll = new grpc::Method<global::GRpcApi.GetAllDepartmentsRequest, global::GRpcApi.GetAllDepartmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_gAPI_GetAllDepartmentsRequest,
        __Marshaller_gAPI_GetAllDepartmentsResponse);

    static readonly grpc::Method<global::GRpcApi.AddDepatmentRequest, global::GRpcApi.AddDepartmentResponse> __Method_Add = new grpc::Method<global::GRpcApi.AddDepatmentRequest, global::GRpcApi.AddDepartmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_gAPI_AddDepatmentRequest,
        __Marshaller_gAPI_AddDepartmentResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRpcApi.GrpcapiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Deparments</summary>
    public partial class DeparmentsClient : grpc::ClientBase<DeparmentsClient>
    {
      /// <summary>Creates a new client for Deparments</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DeparmentsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Deparments that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DeparmentsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DeparmentsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DeparmentsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRpcApi.GetAllDepartmentsResponse GetAll(global::GRpcApi.GetAllDepartmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRpcApi.GetAllDepartmentsResponse GetAll(global::GRpcApi.GetAllDepartmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.GetAllDepartmentsResponse> GetAllAsync(global::GRpcApi.GetAllDepartmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.GetAllDepartmentsResponse> GetAllAsync(global::GRpcApi.GetAllDepartmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::GRpcApi.AddDepartmentResponse Add(global::GRpcApi.AddDepatmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Add(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRpcApi.AddDepartmentResponse Add(global::GRpcApi.AddDepatmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.AddDepartmentResponse> AddAsync(global::GRpcApi.AddDepatmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.AddDepartmentResponse> AddAsync(global::GRpcApi.AddDepatmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DeparmentsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DeparmentsClient(configuration);
      }
    }

  }
  public static partial class Employees
  {
    static readonly string __ServiceName = "gAPI.Employees";

    static readonly grpc::Marshaller<global::GRpcApi.GetByDepartmentIdRequest> __Marshaller_gAPI_GetByDepartmentIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.GetByDepartmentIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.GetByDepartmentIdRsponse> __Marshaller_gAPI_GetByDepartmentIdRsponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.GetByDepartmentIdRsponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.AddEmployeeRequest> __Marshaller_gAPI_AddEmployeeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.AddEmployeeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.AddEmployeeRsponse> __Marshaller_gAPI_AddEmployeeRsponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.AddEmployeeRsponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.FireEmployeeRequest> __Marshaller_gAPI_FireEmployeeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.FireEmployeeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRpcApi.FireEmployeeRsponse> __Marshaller_gAPI_FireEmployeeRsponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRpcApi.FireEmployeeRsponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GRpcApi.GetByDepartmentIdRequest, global::GRpcApi.GetByDepartmentIdRsponse> __Method_GetByDepartmentId = new grpc::Method<global::GRpcApi.GetByDepartmentIdRequest, global::GRpcApi.GetByDepartmentIdRsponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByDepartmentId",
        __Marshaller_gAPI_GetByDepartmentIdRequest,
        __Marshaller_gAPI_GetByDepartmentIdRsponse);

    static readonly grpc::Method<global::GRpcApi.AddEmployeeRequest, global::GRpcApi.AddEmployeeRsponse> __Method_AddEmployee = new grpc::Method<global::GRpcApi.AddEmployeeRequest, global::GRpcApi.AddEmployeeRsponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddEmployee",
        __Marshaller_gAPI_AddEmployeeRequest,
        __Marshaller_gAPI_AddEmployeeRsponse);

    static readonly grpc::Method<global::GRpcApi.FireEmployeeRequest, global::GRpcApi.FireEmployeeRsponse> __Method_FireEmployee = new grpc::Method<global::GRpcApi.FireEmployeeRequest, global::GRpcApi.FireEmployeeRsponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FireEmployee",
        __Marshaller_gAPI_FireEmployeeRequest,
        __Marshaller_gAPI_FireEmployeeRsponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRpcApi.GrpcapiReflection.Descriptor.Services[1]; }
    }

    /// <summary>Client for Employees</summary>
    public partial class EmployeesClient : grpc::ClientBase<EmployeesClient>
    {
      /// <summary>Creates a new client for Employees</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EmployeesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Employees that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EmployeesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EmployeesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EmployeesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRpcApi.GetByDepartmentIdRsponse GetByDepartmentId(global::GRpcApi.GetByDepartmentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByDepartmentId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRpcApi.GetByDepartmentIdRsponse GetByDepartmentId(global::GRpcApi.GetByDepartmentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByDepartmentId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.GetByDepartmentIdRsponse> GetByDepartmentIdAsync(global::GRpcApi.GetByDepartmentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByDepartmentIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.GetByDepartmentIdRsponse> GetByDepartmentIdAsync(global::GRpcApi.GetByDepartmentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByDepartmentId, null, options, request);
      }
      public virtual global::GRpcApi.AddEmployeeRsponse AddEmployee(global::GRpcApi.AddEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRpcApi.AddEmployeeRsponse AddEmployee(global::GRpcApi.AddEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.AddEmployeeRsponse> AddEmployeeAsync(global::GRpcApi.AddEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.AddEmployeeRsponse> AddEmployeeAsync(global::GRpcApi.AddEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddEmployee, null, options, request);
      }
      public virtual global::GRpcApi.FireEmployeeRsponse FireEmployee(global::GRpcApi.FireEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FireEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRpcApi.FireEmployeeRsponse FireEmployee(global::GRpcApi.FireEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FireEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.FireEmployeeRsponse> FireEmployeeAsync(global::GRpcApi.FireEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FireEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRpcApi.FireEmployeeRsponse> FireEmployeeAsync(global::GRpcApi.FireEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FireEmployee, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EmployeesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EmployeesClient(configuration);
      }
    }

  }
}
#endregion
